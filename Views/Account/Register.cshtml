@model demo.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new account.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })

    if (!Request.IsAuthenticated)
    {
        <div class="form-group">
            @Html.LabelFor(m => m.first_name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.first_name, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.last_name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.last_name, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.EID, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.EID, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.DOB, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.DOB, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.mobile_no, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.mobile_no, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.gender, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("gender", new List<SelectListItem> { new SelectListItem { Text = "Male", Value = "Male" }, new SelectListItem { Text = "Female", Value = "Female" } }, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group" style="display: none">
            @Html.LabelFor(m => m.UserRoles, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("UserRoles", new List<SelectListItem>(ViewBag.name2), new { @class = "form-control" })
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    if (User.IsInRole("Admin"))
    {
        <div class="form-group">
            @Html.LabelFor(m => m.UserRoles, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("UserRoles", new List<SelectListItem>(ViewBag.name1), new { @class = "form-control" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group" style="display: none">
            @Html.LabelFor(m => m.UserRoles, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownList("UserRoles", new List<SelectListItem>(ViewBag.name), new { @class = "form-control" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
